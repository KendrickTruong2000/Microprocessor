
as12, an absolute assembler for Motorola MCU's, version 1.2h

                        ;Program 1
                        ;        ORG     $1000   ;Program start at memory address $1000
                        ;        CLR     COUNT   ;Clear COUNT variable for later use
                        ;        LDAA    #$0D    ;Load register A with value $0D (13 in decimal)
                        ;        LDY     #STRING ;Load register Y with value from address #STRING
                        ;LOOP    CMPA    $00,Y   ;Compare value of A=$0D with the byte at the address Y
                        ;        BEQ     DONE    ;If equal (A == $Y) then go to DONE
                        ;        INC     COUNT   ;Otherwise increment the counter
                        ;        INY             ;Move pointer Y to different character by increasing.
                        ;        BRA     LOOP    ;Repeat
                        ;DONE    SWI             ;Software interupt to end program
                        ;COUNT   RMB     1       ;Reserves one byte of memory for COUNT
                        ;STRING  FCC     "CONESTOGA COLLEGE"
                        ;        FCB     $0D     ;Define the string "CONESTOGA COLLEGE" in memory that follow by $0D
                        ;        END             ;End of program
                        ;Program 2
                        ;        ORG     $1000  ;Program start at memory address $1000
                        ;        LDAB    COUNT  ;Load register B with value of COUNT = 5
                        ;        LDY     #NUMS  ;Load register Y with address of NUMS
                        ;        LDAA    #$00   ;Load register A with maximum value that was found.
                        ;LOOP    CMPA    $00,Y  ;Compare the current maximum value (A) with the current array element.
                        ;        BHI     BIGGER ;If A is already bigger, skip updating. Otherwise A will update new value
                        ;        LDAA    $00,Y  ;Update the maximum value.
                        ;BIGGER  INY            ;Move Y to next element.
                        ;        DECB           ;Decrement counter
                        ;        BNE     LOOP   ;If B!=0, repeat loop.
                        ;        STAA    $00,Y  ;Store the final maximum at current address Y
                        ;        SWI            ;Software interupt - halt the program
                        ;COUNT   FCB     $05    ;Number of element is 5
                        ;NUMS    FCB     $8C,$42,$AB,$CD,$56    ;Declare 5 different variables for 5 values
                        ;        END            ;End of the program.
                        ;Program 3
1000                            ORG     $1000  ;Program start at memory address $1000
1000 f6 10 13                   LDAB    COUNT  ;Load register B with value of COUNT=5
1003 ce 10 14                   LDX     #FROM  ;X point to the source of array
1006 cd 10 19                   LDY     #TO    ;Y point to the destination of array
1009 a6 00              LOOP    LDAA    $00,X  ;Load A with byte from X
100b 6a 40                      STAA    $00,Y  ;Store A into Y
100d 08                         INX            ;Move pointer X to next source element
100e 02                         INY            ;Move pointer Y to next destination element
100f 53                         DECB           ;Decrement B for one less element left
1010 26 f7                      BNE     LOOP   ;if B != 0 repeat.
1012 3f                         SWI            ;Software interupt.
1013 05                 COUNT   FCB     $5     ;5 Elements
1014 ab cd ef 2a ef     FROM    FCB     $AB,$CD,$EF,$2A,$EF
1019                    TO      RMB     5      ;Reserve 5 bytes for 5 elements.
                                END

Executed: Wed Sep 10 17:27:33 2025
Total cycles: 32, Total bytes: 25
Total errors: 0, Total warnings: 0
